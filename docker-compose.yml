version: '3.7'

services:
  nginx:
    image: nginx:1.17
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - ${NGINX_PORT}:80 # HOST:CONTAINER
    depends_on:
      - backend
      - frontend

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend
    volumes:
      - ./backend:/backend/
    env_file:
      - ./backend/.env
    ports:
      - ${BACKEND_PORT}:8000
    depends_on:
      - db
    command: uvicorn app.api.server:app --reload --workers 4 --reload-dir /app --host 0.0.0.0 --port 8000

  # ui:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.frontend
  #   container_name: ui
  #   volumes:
  #     - ./frontend:/app
  #   env_file:
  #     - .env
  #   ports:
  #     - 3000:3000
  #   # entrypoint: nodemon ./forever.js
  #   entrypoint: nodemon -L --exec yarn dev

  db:
    image: postgres:13-alpine
    container_name: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=ergohack
      - POSTGRES_PASSWORD=ergohack # 3rg0h@cK!
      - POSTGRES_DB=test # prod
    ports:
      - ${POSTGRES_PORT}:5432

  redis:
    image: redis
    container_name: redis
    volumes:
      - redis_data:/data # redis persistence
    ports:
      - ${REDIS_PORT}:6379
    entrypoint: redis-server --appendonly yes

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      - db
    environment:
      - PGADMIN_LISTEN_PORT=5050
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASS} # 3rg0h@cK!
    ports:
      - ${PGADMIN_PORT}:5050

  aggregator:
    build:
      context: .
      dockerfile: Dockerfile.aggregator
    container_name: aggregator
    volumes:
      - ./aggregator:/app # !! update for main docker-compose file
    # env_file:
    #   - ./aggregator/.env
    ports:
      - 8000:8000
    # command: uvicorn main:app --reload --workers 4 --reload-dir /app --host 0.0.0.0 --port 8000
    command: tail /dev/null -f

  worker:
    build:
      context: .
      dockerfile: ../Dockerfile.aggregator
    container_name: worker
    command: celery --app app.tasks worker --loglevel=DEBUG -Q main-queue -c 1

  flower:  
    image: mher/flower
    container_name: flower
    command: celery flower --broker=redis://redis:6379/0 --port=5555
    ports:  
        - ${FLOWER_PORT}:5555
    depends_on:
      - redis

#   ergonode:
#     image: openjdk
#     container_name: ergonode
#     volumes: 
#       - './node/:/var/ergo'
#       - './testnet/.ergo:/var/ergo/.ergo'
#     ports:
#       - '9053:9053' # rempap for config files
#     depends_on: 
#       - redis
#     working_dir: /var/ergo
#     entrypoint: java -jar ergo-4.0.13.jar --testnet -c testnet.conf
# 
#   ergostratum:
#     container_name: ergostratum
#     build: 
#       context: .
#       dockerfile: Dockerfile.stratum
#     volumes: 
#       - './stratum:/var/ergo'
#     ports: 
#       - "8008:8008" # stratum
#     environment:
#       - NODEHOST=ergonode
#       - NODEPORT=9053
#     depends_on: 
#       - ergonode
#     entrypoint: nodemon ./tulip.js -e js # restart on js file changes

volumes:
  postgres_data:
  redis_data:
    