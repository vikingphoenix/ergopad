version: '3.7'

services:
  nginx:
    container_name: nginx
    image: nginx:1.17
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - ${NGINX_PORT}:80 # HOST:CONTAINER
    depends_on:
      - backend
      - frontend

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile.backend
    volumes:
      - ./backend:/backend/
    env_file:
      - .env
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      - postgres
    command: uvicorn app.api.server:app --reload --workers 4 --reload-dir /app --host 0.0.0.0 --port 8000

  frontend:
    container_name: ui
    build:
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - ./frontend:/app
    env_file:
      - .env
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    # entrypoint: nodemon ./forever.js
    # entrypoint: nodemon -L --exec yarn dev
    entrypoint: tail /dev/null -f

  postgres:
    container_name: postgres
    image: postgres:14-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}

  redis:
    container_name: redis
    image: redis
    volumes:
      - redis_data:/data # redis persistence
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    entrypoint: redis-server --appendonly yes

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      - PGADMIN_LISTEN_PORT=${PGADMIN_PORT}
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASS} # 3rg0h@cK!
    ports:
      - ${PGADMIN_PORT}:${PGADMIN_PORT}

  aggregator:
    container_name: aggregator
    build:
      context: .
      dockerfile: Dockerfile.aggregator
    volumes:
      - ./aggregator/app:/app # !! update for main docker-compose file
    env_file:
      - .env
    ports:
      - ${AGGREGATOR_PORT}:${AGGREGATOR_PORT}
    # command: uvicorn main:app --reload --workers 4 --reload-dir /app --host 0.0.0.0 --port ${AGGREGATOR_PORT}
    command: tail /dev/null -f

  worker:
    container_name: worker
    build:
      context: .
      dockerfile: Dockerfile.aggregator
    command: celery --app app.tasks worker --loglevel=DEBUG -Q main-queue -c 1

  flower:  
    container_name: flower
    image: mher/flower
    command: celery flower --broker=redis://redis:${REDIS_PORT}/0 --port=${FLOWER_PORT}
    ports:  
        - ${FLOWER_PORT}:${FLOWER_PORT}
    depends_on:
      - redis

#   ergonode:
#     image: openjdk
#     container_name: ergonode
#     volumes: 
#       - ./node/:/opt/ergo
#       - ./testnet/.ergo:/opt/ergo/.ergo
#     ports:
#       - ${ERGONODE_PORT}:${ERGONODE_PORT} # rempap for config files
#     depends_on: 
#       - redis
#     working_dir: /var/ergo
#     entrypoint: java -jar ergo-4.0.13.jar --testnet -c testnet.conf
# 
#   ergostratum:
#     container_name: ergostratum
#     build: 
#       context: .
#       dockerfile: Dockerfile.stratum
#     volumes: 
#       - './stratum:/opt/ergo'
#     ports: 
#       - "8008:8008" # stratum
#     environment:
#       - NODEHOST=ergonode
#       - NODEPORT=${ERGONODE_PORT}
#     depends_on: 
#       - ergonode
#     entrypoint: nodemon ./tulip.js -e js # restart on js file changes

volumes:
  postgres_data:
  redis_data:
  postgres_data:
